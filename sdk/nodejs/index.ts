// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./provider";
export * from "./randomId";
export * from "./randomInteger";
export * from "./randomPassword";
export * from "./randomPet";
export * from "./randomShuffle";
export * from "./randomString";
export * from "./randomUuid";

// Import resources to register:
import { RandomId } from "./randomId";
import { RandomInteger } from "./randomInteger";
import { RandomPassword } from "./randomPassword";
import { RandomPet } from "./randomPet";
import { RandomShuffle } from "./randomShuffle";
import { RandomString } from "./randomString";
import { RandomUuid } from "./randomUuid";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "random:index/randomId:RandomId":
                return new RandomId(name, <any>undefined, { urn })
            case "random:index/randomInteger:RandomInteger":
                return new RandomInteger(name, <any>undefined, { urn })
            case "random:index/randomPassword:RandomPassword":
                return new RandomPassword(name, <any>undefined, { urn })
            case "random:index/randomPet:RandomPet":
                return new RandomPet(name, <any>undefined, { urn })
            case "random:index/randomShuffle:RandomShuffle":
                return new RandomShuffle(name, <any>undefined, { urn })
            case "random:index/randomString:RandomString":
                return new RandomString(name, <any>undefined, { urn })
            case "random:index/randomUuid:RandomUuid":
                return new RandomUuid(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("random", "index/randomId", _module)
pulumi.runtime.registerResourceModule("random", "index/randomInteger", _module)
pulumi.runtime.registerResourceModule("random", "index/randomPassword", _module)
pulumi.runtime.registerResourceModule("random", "index/randomPet", _module)
pulumi.runtime.registerResourceModule("random", "index/randomShuffle", _module)
pulumi.runtime.registerResourceModule("random", "index/randomString", _module)
pulumi.runtime.registerResourceModule("random", "index/randomUuid", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("random", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:random") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
