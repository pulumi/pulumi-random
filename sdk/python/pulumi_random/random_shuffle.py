# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities, tables

class RandomShuffle(pulumi.CustomResource):
    """
    The resource `random_shuffle` generates a random permutation of a list
    of strings given as an argument.
    """
    def __init__(__self__, __name__, __opts__=None, inputs=None, keepers=None, result_count=None, seed=None):
        """Create a RandomShuffle resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not inputs:
            raise TypeError('Missing required property inputs')
        __props__['inputs'] = inputs

        __props__['keepers'] = keepers

        __props__['result_count'] = result_count

        __props__['seed'] = seed

        __props__['results'] = None

        super(RandomShuffle, __self__).__init__(
            'random:index/randomShuffle:RandomShuffle',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

