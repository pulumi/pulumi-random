# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from . import utilities, tables

class RandomInteger(pulumi.CustomResource):
    """
    The resource `random_integer` generates random values from a given range, described by the `min` and `max` attributes of a given resource.
    
    This resource can be used in conjunction with resources that have
    the `create_before_destroy` lifecycle flag set, to avoid conflicts with
    unique names during the brief period where both the old and new resources
    exist concurrently.
    """
    def __init__(__self__, __name__, __opts__=None, keepers=None, max=None, min=None, seed=None):
        """Create a RandomInteger resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['keepers'] = keepers

        if not max:
            raise TypeError('Missing required property max')
        __props__['max'] = max

        if not min:
            raise TypeError('Missing required property min')
        __props__['min'] = min

        __props__['seed'] = seed

        __props__['result'] = None

        super(RandomInteger, __self__).__init__(
            'random:index/randomInteger:RandomInteger',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

